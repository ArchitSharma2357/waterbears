<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Attributes on WaterBears</title>
    <link>http://localhost:1313/tags/attributes/</link>
    <description>Recent content in Attributes on WaterBears</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Jan 2025 03:33:00 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/attributes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pytorch 05: Zeros and Ones</title>
      <link>http://localhost:1313/posts/pytorch05/</link>
      <pubDate>Mon, 20 Jan 2025 03:33:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/pytorch05/</guid>
      <description>&lt;p&gt;PyTorch provides two useful functions, &lt;a href=&#34;https://pytorch.org/docs/stable/generated/torch.zeros.html&#34;&gt;&lt;code&gt;torch.zeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&#34;https://pytorch.org/docs/stable/generated/torch.ones.html&#34;&gt;&lt;code&gt;torch.ones&lt;/code&gt;&lt;/a&gt;, to create tensors filled entirely with zeros or ones, respectively. These functions are commonly used for initializing tensors in machine learning and deep learning tasks.&lt;/p&gt;&#xA;&lt;p&gt;Zero initialization is primarily utilized for defining biases or placeholders in machine learning models, providing a neutral starting point that does not affect initial computations. Conversely, ones initialization is valuable in scaling operations or additive computations, offering consistency and ensuring predictable behavior during the process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pytorch 04: Random Tensors</title>
      <link>http://localhost:1313/posts/pytorch04/</link>
      <pubDate>Mon, 20 Jan 2025 02:50:00 +0530</pubDate>
      <guid>http://localhost:1313/posts/pytorch04/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://pytorch.org/docs/stable/generated/torch.rand.html&#34;&gt;&lt;code&gt;torch.rand&lt;/code&gt;&lt;/a&gt; is a function in PyTorch used to generate a tensor filled with random numbers sampled from a uniform distribution over the interval [0, 1). It is useful when you need random values for initialization or stochastic processes &lt;em&gt;(discussed later)&lt;/em&gt; in machine learning and deep learning applications.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s create a matrix using &lt;code&gt;size()&lt;/code&gt; parameter.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# creating a random tensor of size --&amp;gt; (3, 3)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;random_matrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; torch.&lt;span style=&#34;color:#a6e22e&#34;&gt;rand&lt;/span&gt;(size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;random_matrix, random_matrix.dtype, random_matrix.&lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;tensor&lt;/span&gt;([[&lt;span style=&#34;color:#ae81ff&#34;&gt;0.6532&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0823&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4880&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3133&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5036&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1455&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7320&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8213&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5246&lt;/span&gt;]]),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; torch.float32,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; torch.&lt;span style=&#34;color:#a6e22e&#34;&gt;Size&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or we can create a tensor :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pytorch 03: Introduction to Tensors</title>
      <link>http://localhost:1313/posts/pytorch03/</link>
      <pubDate>Sun, 19 Jan 2025 04:02:45 +0530</pubDate>
      <guid>http://localhost:1313/posts/pytorch03/</guid>
      <description>&lt;p&gt;How about we create a &lt;strong&gt;tensor&lt;/strong&gt;?&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TENSOR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; torch.&lt;span style=&#34;color:#a6e22e&#34;&gt;tensor&lt;/span&gt;([[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TENSOR&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tensor&lt;/span&gt;([[[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s nice! Tensors can be used to represent almost anything.&lt;/p&gt;&#xA;&lt;p&gt;What do you think &lt;code&gt;ndim&lt;/code&gt; will give?&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TENSOR.ndim&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And, what about &lt;code&gt;size()&lt;/code&gt;?&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TENSOR.&lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;torch.&lt;span style=&#34;color:#a6e22e&#34;&gt;Size&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>PyTorch 02: Matrices</title>
      <link>http://localhost:1313/posts/pytorch02/</link>
      <pubDate>Sun, 19 Jan 2025 01:39:23 +0530</pubDate>
      <guid>http://localhost:1313/posts/pytorch02/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;matrix&lt;/strong&gt; has two dimensions, which means&amp;hellip; yep, you guessed it, two square brackets!&lt;/p&gt;&#xA;&lt;p&gt;Now, Let&amp;rsquo;s start by creating a matrix.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MATRIX &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; torch.&lt;span style=&#34;color:#a6e22e&#34;&gt;tensor&lt;/span&gt;([[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]]) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MATRIX&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;tensor&lt;/span&gt;([[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s check its the &lt;code&gt;size&lt;/code&gt; :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MATRIX.&lt;span style=&#34;color:#a6e22e&#34;&gt;size&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;torch.&lt;span style=&#34;color:#a6e22e&#34;&gt;Size&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output &lt;code&gt;torch.Size([2, 2])&lt;/code&gt; indicates that the matrix is two elements deep and two elements wide.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PyTorch 01: Basics</title>
      <link>http://localhost:1313/posts/pytorch01/</link>
      <pubDate>Sat, 18 Jan 2025 03:15:13 +0530</pubDate>
      <guid>http://localhost:1313/posts/pytorch01/</guid>
      <description>&lt;h2 id=&#34;importing-pytorch&#34;&gt;Importing PyTorch&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s start by importing PyTorch and checking the version we&amp;rsquo;re using.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;import torch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;torch.__version__&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.5.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;cu121&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It looks like we&amp;rsquo;ve got PyTorch 2.5.1+.&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction-to-tensors&#34;&gt;Introduction to Tensors&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Tensors&lt;/strong&gt; are multi-dimensional arrays with a uniform type. In machine&#xA;learning, the term tensor informally refers to two different concepts&#xA;:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;a way of organizing data,&lt;/li&gt;&#xA;&lt;li&gt;a multilinear (tensor)&#xA;transformation. Data may be organized in a multidimensional array (M-way&#xA;array).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;For example, you could represent an image as a tensor with shape&#xA;&lt;code&gt;[3, 224, 224]&lt;/code&gt; which could mean &lt;code&gt;[colour_channels, height, width]&lt;/code&gt;.&#xA;Thus, the tensor would have dimensions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
